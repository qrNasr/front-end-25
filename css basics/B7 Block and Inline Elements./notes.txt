

In HTML, elements are by default either **block-level** or **inline-level**. This default behavior affects how they flow on the page and how they interact with other elements.

**Block-Level Elements:**

* Block-level elements take up the full width available to them (their parent container) by default.
* They always start on a new line.
* They can contain both inline and other block-level elements.
* Examples of common block-level elements include: `<div>`, `<h1>` to `<h6>`, `<p>`, `<ul>`, `<ol>`, `<li>`, `<form>`, `<header>`, `<footer>`, `<section>`.

**Inline-Level Elements:**

* Inline-level elements only take up as much width as necessary to contain their content.
* They do not start on a new line; they flow along with the surrounding content.
* They can only contain other inline elements or text.
* You typically cannot set the `width` and `height` of inline elements directly. Padding and margin applied to inline elements might behave unexpectedly (especially vertical padding and margin).
* Examples of common inline-level elements include: `<span>`, `<a>`, `<img>`, `<strong>`, `<em>`, `<br>`, `<input>`, `<textarea>`, `<button>`.

**Understanding the Default Behavior:**

Let's consider our current `index.html` structure:

```html
<body>
    <h1 id="main-heading" data-type="main">Hello, World!</h1>
    <p class="intro-paragraph" lang="en">This is the first paragraph of text.</p>
    <p class="another-paragraph" lang="fr">This is another paragraph with <span>some emphasized text</span> inside.</p>
    <a href="https://www.example.com" target="_blank">Example Link</a>
    <a href="/about">About Us</a>
</body>
```

* `<h1>` and `<p>` are block-level elements. Each of them will occupy the full width of the `<body>` and will stack on top of each other.
* `<span>` is an inline-level element. It only takes up the space needed for "some emphasized text" and flows within the `<p>` element.
* `<a>` (anchor) tags are also inline-level elements. They will appear next to each other on the same line as long as there is enough horizontal space.

**Modifying the Display Property:**

CSS provides the `display` property, which allows you to change the default block or inline behavior of an element. The most common values for `display` that you'll use are:

* `block`: Makes an element behave like a block-level element.
* `inline`: Makes an element behave like an inline-level element.
* `inline-block`: This is a hybrid. The element flows like an inline element (it doesn't force a new line), but you can set its `width`, `height`, `padding`, and `margin` like a block-level element.

**Example:**

Let's modify our `styles.css` to see the `display` property in action.

**Step 1: Add CSS rules to `styles.css`**

Open your `styles.css` file and add the following rules:

```css
body {
    background-color: lightgray;
}

#main-heading {
    color: green;
    text-decoration: underline;
}

.intro-paragraph {
    font-weight: bold;
    background-color: lightblue;
    padding: 20px;
    border: 2px dashed red;
    margin: 30px;
}

.another-paragraph {
    color: red;
    border: 3px solid green;
    padding: 15px;
    margin-top: 20px;
    margin-bottom: 20px;
    margin-left: 40px;
    margin-right: 40px;
    background-color: lightyellow;
}

.another-paragraph span {
    font-weight: bolder;
    color: purple;
}

[lang] {
    border: 1px solid black;
    padding: 5px;
    margin-bottom: 5px;
}

[lang="fr"] {
    background-color: lightcoral;
    color: white;
}

a[href^="https"] {
    font-weight: bold;
}

/* Make the inline <span> element behave like a block */
.another-paragraph span {
    display: block;
    background-color: pink;
    padding: 10px;
    margin-top: 10px;
}

/* Make the block-level <p> element behave like inline-block */
.intro-paragraph {
    display: inline-block;
    width: auto; /* Override default full width */
    margin-right: 20px; /* Add some space to the right */
}

/* Make the inline <a> elements behave like blocks */
a {
    display: block;
    border: 1px solid blue;
    padding: 10px;
    margin-bottom: 5px;
    text-decoration: none; /* Remove default underline from links */
    color: black;
}
```

**Step 2: Save and refresh**

1.  Save your `styles.css` file.
2.  Refresh your `index.html` page in the browser.

Now you should observe the following changes:

* The `<span>` element inside the second paragraph, which was originally inline, now behaves like a block. It takes up the full width of its parent `<p>`, has a pink background, and its padding and top margin are clearly visible.
* The first paragraph (`.intro-paragraph`), which was block-level, now behaves like an `inline-block` element. It only takes up the width of its content (plus padding and border), and there's now a margin to its right. It no longer forces the next paragraph to start on a new line immediately below it (though the second paragraph is still block-level and will start on a new line).
* The `<a>` elements, which were inline, now behave like blocks. Each link takes up the full width, has a blue border, padding, and margin, and they are stacked on top of each other.

Understanding `display: block`, `display: inline`, and `display: inline-block` is crucial for controlling the basic layout of your HTML elements.

Do you have any questions about block and inline elements or the `display` property? Would you like to explore another CSS layout technique?