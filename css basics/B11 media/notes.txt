Okay! Let's create a new, simple project to demonstrate the use of media queries. This will help illustrate how a basic webpage can adapt its layout for different screen sizes.

**Goal:** Create a webpage with a colored box that changes its size and background color at different screen widths.

**Step 1: Create a new HTML file**

1.  Open a new text editor.
2.  Type the following HTML code:

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Media Queries Demo</title>
    <link rel="stylesheet" href="mq-styles.css">
</head>
<body>
    <div class="responsive-box">This box changes with screen size!</div>
</body>
</html>
```

3.  Save this file as `index.html` in a new folder (e.g., `media-query-demo`).

**Step 2: Create a new CSS file**

1.  Open another new text editor.
2.  Type the following CSS code:

```css
body {
    font-family: sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    background-color: #f4f4f4;
}

.responsive-box {
    background-color: lightblue;
    color: white;
    text-align: center;
    padding: 50px;
    font-size: 20px;
    border-radius: 10px;
    width: 80%; /* Default width for larger screens */
    max-width: 600px; /* Maximum width */
}

/* Media query for small screens (max-width: 480px) */
@media (max-width: 480px) {
    .responsive-box {
        background-color: lightcoral;
        font-size: 16px;
        padding: 30px;
        width: 95%; /* Wider on smaller screens */
    }
}

/* Media query for medium screens (min-width: 481px and max-width: 768px) */
@media (min-width: 481px) and (max-width: 768px) {
    .responsive-box {
        background-color: lightseagreen;
        font-size: 24px;
        padding: 40px;
        width: 70%;
    }
}

/* Media query for large screens (min-width: 769px) */
@media (min-width: 769px) {
    .responsive-box {
        background-color: lightskyblue;
        font-size: 28px;
    }
}
```

3.  Save this file as `mq-styles.css` in the **same folder** (`media-query-demo`) where you saved `index.html`.

**Step 3: Open `index.html` in your web browser**

1.  Navigate to the `media-query-demo` folder on your computer.
2.  Double-click the `index.html` file to open it in your default web browser.

**How to see the media queries in action:**

Now, resize your browser window. You should observe the following changes to the colored box:

* **Large Screens (width greater than 768px):** The box will have a lightskyblue background and a font size of 28px.
* **Medium Screens (width between 481px and 768px):** The box will have a lightseagreen background, a font size of 24px, and a width of 70%.
* **Small Screens (width 480px or less):** The box will have a lightcoral background, a font size of 16px, a padding of 30px, and a width of 95%.
* **Default (larger than 768px initially):** If your screen is large, the default styles will apply (lightblue background, 20px font size, 80% width).

**Explanation of the CSS:**

* We start with some basic styles for the `body` to center the box on the page.
* The `.responsive-box` has default styles for larger screens.
* The `@media` rules define different styles that will be applied based on the screen width:
    * `(max-width: 480px)`: Applies to screens with a maximum width of 480 pixels.
    * `(min-width: 481px) and (max-width: 768px)`: Applies to screens with a minimum width of 481 pixels and a maximum width of 768 pixels.
    * `(min-width: 769px)`: Applies to screens with a minimum width of 769 pixels.

This simple project demonstrates how media queries allow you to apply different styles based on the screen size, making your webpage responsive.

Do you have any questions about this example or would you like to try modifying it?